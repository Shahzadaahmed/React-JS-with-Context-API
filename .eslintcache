[{"F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\index.js":"1","F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\App.js":"2","F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\components\\comA.js":"3","F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\components\\todo-list.js":"4","F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\components\\list.js":"5","F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\components\\toggleBulb.js":"6","F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\components\\comB.js":"7","F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\components\\learning-cookies.js":"8"},{"size":218,"mtime":1611903319030,"results":"9","hashOfConfig":"10"},{"size":1417,"mtime":1612949582902,"results":"11","hashOfConfig":"10"},{"size":430,"mtime":1612949563094,"results":"12","hashOfConfig":"10"},{"size":3633,"mtime":1612785639259,"results":"13","hashOfConfig":"10"},{"size":523,"mtime":1612776861384,"results":"14","hashOfConfig":"10"},{"size":881,"mtime":1612784259020,"results":"15","hashOfConfig":"10"},{"size":567,"mtime":1612785308496,"results":"16","hashOfConfig":"10"},{"size":1513,"mtime":1612949770409,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1xmmgv0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\index.js",[],["36","37"],"F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\App.js",["38","39","40","41","42","43","44","45"],"F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\components\\comA.js",["46"],"F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\components\\todo-list.js",["47","48"],"import React, { useState, useContext } from 'react';\r\nimport { TodoContext } from \"../App\";\r\nlet targetIndex;\r\n\r\nconst TodoListApp = () => {\r\n\r\n    // Contecxt hook...!\r\n    const [myTodoList, setMyTodoList] = useContext(TodoContext);\r\n\r\n    // Handeling states here...!\r\n    const [todoInput, setTodoInput] = useState(\"\");\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    /***** FUCNTIONS *****/\r\n\r\n    // Note: Function to add item...!\r\n    const addItem = () => {\r\n        let todoListClone = myTodoList;\r\n        if (todoInput != 0) {\r\n            todoListClone.push(todoInput);\r\n            setMyTodoList(todoListClone);\r\n            setTodoInput(\"\");\r\n        }\r\n\r\n        else {\r\n            alert(\"You need to fill all the fields accurately!\");\r\n            setTodoInput(\"\");\r\n        }\r\n    }\r\n\r\n    // Note: Function to delete item...!\r\n    const deleteItem = (indexKey) => {\r\n        let todoListClone = myTodoList.slice(0);\r\n        todoListClone.splice(indexKey, 1);\r\n        setMyTodoList(todoListClone);\r\n    }\r\n\r\n    // Function to edit item...!\r\n    const editItem = (indexKey) => {\r\n        setIsEditing(true);\r\n        setTodoInput(myTodoList[indexKey]);\r\n        targetIndex = indexKey;\r\n    }\r\n\r\n    // Function to update item...!\r\n    const updateItem = () => {\r\n        if (todoInput != 0) {\r\n            let todoListClone = myTodoList.slice(0);\r\n            todoListClone.splice(targetIndex, 1, todoInput);\r\n            setMyTodoList(todoListClone);\r\n            setTodoInput(\"\");\r\n            setIsEditing(false);\r\n        }\r\n\r\n        else {\r\n            alert(\"You need to fill all the fields accurately!\");\r\n            setTodoInput(\"\");\r\n        }\r\n    }\r\n\r\n    // Function to cancel item...!\r\n    const cancel = () => {\r\n        setIsEditing(false);\r\n        setTodoInput(\"\");\r\n    }\r\n\r\n    // Function to delete all...!\r\n    const deleteAllItems = () => {\r\n        let todoListClone = myTodoList.slice(0);\r\n        todoListClone.splice(0, todoListClone.length);\r\n        setMyTodoList(todoListClone);\r\n        alert(\"All Items Deleted Successfully!\");\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2> Todo List App using React-JS with Context! </h2>\r\n            <input\r\n                type=\"text\"\r\n                value={todoInput}\r\n                onChange={(event) => { setTodoInput(event.target.value) }}\r\n            />\r\n            {\r\n                (isEditing)\r\n                    ?\r\n                    (\r\n                        <div>\r\n                            <button onClick={updateItem}> Update Item </button>\r\n                            <button onClick={cancel}> Cancel </button>\r\n                        </div>\r\n                    )\r\n                    :\r\n                    (\r\n                        <div>\r\n                            <button onClick={addItem}> Add Item </button>\r\n                            <button onClick={deleteAllItems}> Delete All </button>\r\n                        </div>\r\n                    )\r\n            }\r\n\r\n            <div>\r\n                {\r\n                    myTodoList.map((item, index) => {\r\n                        return (\r\n                            <li key={index}>\r\n                                {item}\r\n                                <button onClick={() => { deleteItem(index) }}> Delete Item </button>\r\n                                <button onClick={() => { editItem(index) }}> Edit Item </button>\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TodoListApp;","F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\components\\list.js",["49"],"F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\components\\toggleBulb.js",[],"F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\components\\comB.js",[],"F:\\My Documents\\Web , Apps Development\\React JS\\learning-context-api\\src\\components\\learning-cookies.js",["50","51","52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":21,"column":10,"nodeType":"60","messageId":"61","endLine":21,"endColumn":19},{"ruleId":"58","severity":1,"message":"62","line":21,"column":21,"nodeType":"60","messageId":"61","endLine":21,"endColumn":33},{"ruleId":"58","severity":1,"message":"63","line":22,"column":10,"nodeType":"60","messageId":"61","endLine":22,"endColumn":18},{"ruleId":"58","severity":1,"message":"64","line":22,"column":20,"nodeType":"60","messageId":"61","endLine":22,"endColumn":31},{"ruleId":"58","severity":1,"message":"65","line":23,"column":10,"nodeType":"60","messageId":"61","endLine":23,"endColumn":16},{"ruleId":"58","severity":1,"message":"66","line":23,"column":18,"nodeType":"60","messageId":"61","endLine":23,"endColumn":27},{"ruleId":"58","severity":1,"message":"67","line":24,"column":10,"nodeType":"60","messageId":"61","endLine":24,"endColumn":25},{"ruleId":"58","severity":1,"message":"68","line":24,"column":27,"nodeType":"60","messageId":"61","endLine":24,"endColumn":45},{"ruleId":"58","severity":1,"message":"69","line":3,"column":17,"nodeType":"60","messageId":"61","endLine":3,"endColumn":27},{"ruleId":"70","severity":1,"message":"71","line":19,"column":23,"nodeType":"72","messageId":"73","endLine":19,"endColumn":25},{"ruleId":"70","severity":1,"message":"71","line":47,"column":23,"nodeType":"72","messageId":"73","endLine":47,"endColumn":25},{"ruleId":"58","severity":1,"message":"74","line":7,"column":18,"nodeType":"60","messageId":"61","endLine":7,"endColumn":25},{"ruleId":"70","severity":1,"message":"75","line":22,"column":32,"nodeType":"72","messageId":"73","endLine":22,"endColumn":34},{"ruleId":"70","severity":1,"message":"75","line":25,"column":33,"nodeType":"72","messageId":"73","endLine":25,"endColumn":35},{"ruleId":"70","severity":1,"message":"71","line":34,"column":18,"nodeType":"72","messageId":"73","endLine":34,"endColumn":20},{"ruleId":"70","severity":1,"message":"71","line":38,"column":22,"nodeType":"72","messageId":"73","endLine":38,"endColumn":24},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'stateList' is assigned a value but never used.","Identifier","unusedVar","'setStateList' is assigned a value but never used.","'todoList' is assigned a value but never used.","'setTodoList' is assigned a value but never used.","'toggle' is assigned a value but never used.","'setToggle' is assigned a value but never used.","'updateFirstName' is assigned a value but never used.","'setUpdateFirstName' is assigned a value but never used.","'useContext' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setData' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]